@page "/"
@inject NavigationManager Navigation
@implements IDisposable

@inject IBooksService BooksService

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<DataListView TItemType="Book" Items="_books" ColumnsCount="4">
    <ItemTemplate Context="book">
        <BookCard Book="@book" OnAddToCartClicked="AddToCart!"></BookCard>
    </ItemTemplate>
</DataListView>

<ModalPopup Title="Hi!" IsOpen="@_isWelcomeModalOpen" OnCloseClicked="() => _isWelcomeModalOpen = false">
    <ChildContent>
        <p>Welcome to our Books Store, here you will find a huge collection of books to help you build you career in software development, enjoy it!</p>
    </ChildContent>
    <FooterContent>
        <button class="btn btn-primary" @onclick="() => _isWelcomeModalOpen = false">Discover It</button>
    </FooterContent>
</ModalPopup>

@code
{
    private bool _isWelcomeModalOpen = true;
    
    private readonly Book _firstBook = new()
    {
        AuthorName = "John Smith",
        PublishingDate = new DateTime(2022, 08, 01),
        Title = "Mastering Blazor WebAssembly"
    };
    
    private List<Book> _books = [];
    protected override async Task OnInitializedAsync()
    {
        //Call the JS import and pass the path of the external js path that will place in the same directory.
        var module = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/UserPages/Home.razor.js");
        
        //From the module JS object, we can call the getRandomBook() method 
        var randomBook = await module.InvokeAsync<Book>("getRandomBook");
        Console.WriteLine(randomBook.Title);
        _books = await BooksService.GetAllBooksAsync();
        Navigation.LocationChanged += Navigation_LocationChanged;

        await JsRuntime.InvokeVoidAsync("callStaticCSharpMethod");
    }
    
    public void Dispose()
    {
        Navigation.LocationChanged -= Navigation_LocationChanged;
    }
    
    private readonly List<Book> _booksCart = [];
    private void AddToCart(Book selectedBook)
    {
        _booksCart.Add(selectedBook);
    }
    
    private void Navigation_LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        Console.WriteLine($"The location changed to {e.Location}");
    }
}